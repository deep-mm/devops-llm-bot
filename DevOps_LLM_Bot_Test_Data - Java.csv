Index,GitHub_Repo_Link,GitHub_Build_Pipeline_File_Link,GitHub_Build_Pipeline_File_Content,Generated_Build_Pipeline_File_Content,Result
1,https://github.com/apache/rocketmq,https://github.com/apache/rocketmq/blob/develop/.github/workflows/maven.yaml,"""name: Build and Run Tests by Maven
on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches: [master, develop, bazel]
jobs:
  java_build:
    name: """"maven-compile (${{ matrix.os }}, JDK-${{ matrix.jdk }})""""
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # see https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
        os: [ubuntu-latest, windows-latest, macos-latest]
        jdk: [8]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.jdk }}
          distribution: """"adopt""""
          cache: """"maven""""
      - name: Build with Maven
        run: mvn -B package --file pom.xml""",,
2,https://github.com/Blankj/AndroidUtilCode,https://github.com/Blankj/AndroidUtilCode/blob/master/.github/workflows/android.yml,"name: Android CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Gradle
      run: ./gradlew build aR",,
3,https://github.com/brettwooldridge/HikariCP,https://github.com/brettwooldridge/HikariCP/blob/dev/.github/workflows/ci.yml,"name: CI

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        java: ['11']
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: print Java version
      run: java -version
    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build
      run: mvn --no-transfer-progress -B clean package --file pom.xml",,
4,https://github.com/apolloconfig/apollo,https://github.com/apolloconfig/apollo/blob/master/.github/workflows/build.yml,"#
# Copyright 2023 Apollo Authors
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        jdk: [8, 11, 17]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.jdk }}
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: JDK 8
      if: matrix.jdk == '8'
      run: mvn -B clean package jacoco:report -Dmaven.gitcommitid.skip=true
    - name: JDK 11 
      if: matrix.jdk == '11'
      run: mvn -B clean compile -Dmaven.gitcommitid.skip=true
    - name: JDK 17
      if: matrix.jdk == '17'
      run: mvn -B clean compile -Dmaven.gitcommitid.skip=true
    - name: Upload coverage to Codecov
      if: matrix.jdk == '8'
      uses: codecov/codecov-action@v1
      with:
        file: ${{ github.workspace }}/apollo-*/target/site/jacoco/jacoco.xml
",,
5,https://github.com/dianping/cat,https://github.com/dianping/cat/blob/master/.github/workflows/build.yml,"name: Build

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: false
        default: 'warning' 
        type: choice
        options:
        - info
        - warning
        - debug
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUB: meituaninc
      IMAGE: cat
      TAG: ${{ github.sha }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Build the Docker image
      run: docker buildx create --use --name cat-bulder --driver docker-container &&
           docker buildx build --load
            -t $HUB/$IMAGE:$TAG -t $HUB/$IMAGE:latest
            -f docker/Dockerfile . &&
            docker buildx rm cat-bulder",,
6,https://github.com/google/dagger,https://github.com/google/dagger/blob/master/.github/actions/bazel-build/action.yml,"name: 'Bazel build'
description: 'Builds artifacts and creates the Dagger local snapshots.'

runs:
  using: ""composite""
  steps:
    - name: 'Install Java ${{ env.USE_JAVA_VERSION }}'
      uses: actions/setup-java@v3
      with:
        distribution: '${{ env.USE_JAVA_DISTRIBUTION }}'
        java-version: '${{ env.USE_JAVA_VERSION }}'
    - name: 'Check out repository'
      uses: actions/checkout@v3
    - name: 'Cache Bazel files'
      uses: actions/cache@v3
      with:
        path: ~/.cache/bazel
        key: ${{ runner.os }}-bazel-build-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-bazel-build-
    - name: 'Java build'
      run: bazel build //java/...
      shell: bash
    - name: 'Install maven version'
      run: ./util/install-maven.sh ${{ env.USE_MAVEN_VERSION }}
      shell: bash
    - name: 'Install local snapshot'
      run: ./util/install-local-snapshot.sh
      shell: bash
    - name: 'Upload local snapshot for tests'
      uses: actions/upload-artifact@v3
      with:
        name: local-snapshot
        path: ~/.m2/repository/com/google/dagger
    - name: 'Clean bazel cache'
      # According to the documentation, we should be able to exclude these via
      # the actions/cache path, e.g. ""!~/.cache/bazel/*/*/external/"" but that
      # doesn't seem to work.
      run: |
        rm -rf $(bazel info repository_cache)
        rm -rf ~/.cache/bazel/*/*/external/
      shell: bash",,
7,https://github.com/google/gson,https://github.com/google/gson/blob/main/.github/workflows/build.yml,"name: Build

on: [push, pull_request]

permissions:
  contents: read #  to fetch code (actions/checkout)

jobs:
  build:
    name: ""Build on JDK ${{ matrix.java }}""
    strategy:
      matrix:
        java: [ 11, 17 ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: ""Set up JDK ${{ matrix.java }}""
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: 'maven'
      - name: Build with Maven
        # This also runs javadoc:jar to detect any issues with the Javadoc generated during release
        run: mvn --batch-mode --update-snapshots --no-transfer-progress verify javadoc:jar

  native-image-test:
    name: ""GraalVM Native Image test""
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: ""Set up GraalVM""
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm'
          # According to documentation in graalvm/setup-graalvm this is used to avoid rate-limiting issues
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'
      - name: Build and run tests
        # Only run tests in `graal-native-image-test` (and implicitly build and run tests in `gson`),
        # everything else is covered already by regular build job above
        run: mvn test --batch-mode --update-snapshots --no-transfer-progress --activate-profiles native-image-test --projects graal-native-image-test --also-make",,
8,https://github.com/greenrobot/EventBus,https://github.com/greenrobot/EventBus/blob/master/.github/workflows/gradle.yml,"# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Gradle Info
        run: ./gradlew -version
      - name: Build with Gradle
        run: ./gradlew build",,
9,https://github.com/iBotPeaches/Apktool,https://github.com/iBotPeaches/Apktool/blob/master/.github/workflows/build.yml,"name: CI
on:
  push:
    branches:
      - master
  pull_request:
    paths:
      - '**.java'
      - '**.kts'
      - 'brut.apktool/apktool-lib/src/main/resources/**'
      - 'brut.apktool/apktool-lib/src/test/**'
      - '.github/workflows/**'
      - 'gradle/libs.versions.toml'
      - 'gradle/wrapper/**'
      - 'gradlew'
      - 'gradlew.bat'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BINARY_PATH: brut.apktool/apktool-lib/src/main/resources/prebuilt

jobs:
  analyze-mac-aapt:
    runs-on: macos-latest
    strategy:
      matrix:
        file: [ aapt_64, aapt2_64 ]
    steps:
      - uses: actions/checkout@v4
      - name: Verify Executable
        run: ${{ env.BINARY_PATH }}/macosx/${{ matrix.file }} version
      - name: Output Static
        run: otool -L ${{ env.BINARY_PATH }}/macosx/${{ matrix.file }} || true

  analyze-linux-aapt:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file: [ aapt, aapt_64, aapt2, aapt2_64 ]
    steps:
      - uses: actions/checkout@v4
      - name: Verify Executable
        run: ${{ env.BINARY_PATH }}/linux/${{ matrix.file }} version
      - name: Output Static
        run: ldd ${{ env.BINARY_PATH }}/linux/${{ matrix.file }} || true

  analyze-windows-aapt:
    runs-on: windows-latest
    strategy:
      matrix:
        file: [ aapt.exe, aapt_64.exe, aapt2.exe, aapt2_64.exe ]
    steps:
      - uses: actions/checkout@v4
      - name: Verify Executable
        run: ${{ env.BINARY_PATH }}/windows/${{ matrix.file }} version
      - name: Output Static
        run: ldd ${{ env.BINARY_PATH }}/windows/${{ matrix.file }} || true

  build-and-test-with-Java-8-and-later:
    runs-on: ${{ matrix.os }}
    needs:
      - analyze-mac-aapt
      - analyze-linux-aapt
      - analyze-windows-aapt
    name: Build/Test (JDK ${{ matrix.java }}, ${{ matrix.os }})
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
        java: [ 8, 11, 17, 18, 19, 20 ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
      - name: Build and test
        uses: gradle/gradle-build-action@v2.9.0
        with:
          arguments: build shadowJar proguard",,
10,https://github.com/iluwatar/java-design-patterns,https://github.com/iluwatar/java-design-patterns/blob/master/.github/workflows/maven-ci.yml,"name: Java CI

on:
  push:
    branches: [ master ]

jobs:

  build-and-analyze:

    name: Build and Run Sonar analysis on JDK 17
    runs-on: ubuntu-20.04
    steps:

    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        # Disabling shallow clone for improving relevancy of SonarQube reporting
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'

    - name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Cache Sonar packages which as used to run analysis and collect metrics
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    # Some tests need screen access
    - name: Install xvfb
      run: sudo apt-get install -y xvfb

    - name: Build with Maven and run SonarQube analysis
      run: xvfb-run ./mvnw clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
      env:
        # These two env variables are needed for sonar analysis
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}",,
11,https://github.com/linlinjava/litemall,https://github.com/linlinjava/litemall/blob/master/.github/workflows/main.yml,"name: Actions

on: [push, pull_request]

jobs:
  # Building and testing Java with Maven
  # https://docs.github.com/en/actions/guides/building-and-testing-java-with-maven
  Litemall-all:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version:
        - 8
        - 8.0.192
        - 11
        - 11.0.3
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v2
      with:
        java-version: ${{ matrix.java-version }}
        distribution: zulu
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      run: mvn --batch-mode --update-snapshots verify

  # Building and testing Node.js
  # https://docs.github.com/en/actions/guides/building-and-testing-nodejs
  Litemall-admin:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
        - 10.x
        - 12.x
        - 14.x
        # - 15.x
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm --prefix litemall-admin install
    - run: npm --prefix litemall-admin run test

  Litemall-vue:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
        - 10.x
        - 12.x
        - 14.x
        # - 15.x
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm --prefix litemall-vue install
    - run: npm --prefix litemall-vue run test",,
12,https://github.com/LMAX-Exchange/disruptor,https://github.com/LMAX-Exchange/disruptor/blob/master/.github/workflows/gradle-build.yml,"name: Java CI with Gradle

on: [ push, pull_request ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11, 17 ]
    name: Java ${{ matrix.java }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: libs-and-reports
          path: |
            build/libs
            build/reports",,
13,https://github.com/Netflix/Hystrix,https://github.com/Netflix/Hystrix/blob/master/.github/workflows/nebula-ci.yml,"name: ""CI""
on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # test against JDK 8
        java: [ 8  ]
    name: CI with Java ${{ matrix.java }}
    steps:
      - uses: actions/checkout@v1
      - name: Setup jdk
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - uses: actions/cache@v1
        id: gradle-cache
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/dependency-locks/*.lockfile') }}
          restore-keys: |
            - ${{ runner.os }}-gradle-
      - uses: actions/cache@v1
        id: gradle-wrapper-cache
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradlewrapper-${{ hashFiles('gradle/wrapper/*') }}
          restore-keys: |
            - ${{ runner.os }}-gradlewrapper-
      - name: Build with Gradle
        run: ./gradlew --info --stacktrace build
        env:
          CI_NAME: github_actions
          CI_BUILD_NUMBER: ${{ github.sha }}
          CI_BUILD_URL: 'https://github.com/${{ github.repository }}'
          CI_BRANCH: ${{ github.ref }}
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}",,
14,https://github.com/ReactiveX/RxAndroid,https://github.com/ReactiveX/RxAndroid/blob/3.x/.github/workflows/build.yaml,"name: build

on:
  pull_request: {}
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v1.1.0

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 8

      - run: ./gradlew build

      - run: ./gradlew publish
        if: ${{ github.ref == 'refs/heads/3.x' && github.repository == 'ReactiveX/RxAndroid' }}
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USER }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}",,
15,https://github.com/seata/seata,https://github.com/seata/seata/blob/2.x/.github/workflows/build.yml,"name: ""build""

on:
  push:
    branches: [ 2.x, develop, master ]
  pull_request:
    branches: [ 2.x, develop, master ]

jobs:
  # job 1: Test based on java 8 and 17. Do not checkstyle.
  build:
    name: ""build""
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [ 8, 17 ]
    steps:
      # step 1
      - name: ""Checkout""
        uses: actions/checkout@v3
      # step 2
      - name: ""Set up Java JDK""
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
      # step 3
      - name: ""Print maven version""
        run: ./mvnw -version
      # step 4
      - name: ""Build with Maven""
        run: |
          if [ ""${{ matrix.java }}"" == ""8"" ]; then
            ./mvnw -T 4C clean test -Dcheckstyle.skip=false -Dlicense.skip=false -e -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn;
          elif [ ""${{ matrix.java }}"" == ""17"" ]; then
            ./mvnw -T 4C clean test -Dcheckstyle.skip=true  -Dlicense.skip=true  -e -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn;
          fi
      # step 5
      - name: ""Codecov""
        if: matrix.java == '8'
        uses: codecov/codecov-action@v3.1.4

  # job 2: Test on 'arm64v8/ubuntu' OS.
  build_arm64-binary:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && (github.ref_name == 'develop' || github.ref_name == 'snapshot' || github.ref_name == '2.x') }}
    strategy:
      fail-fast: false
    steps:
      # step 1
      - name: ""Checkout""
        uses: actions/checkout@v3
      # step 2
      - name: ""Set up QEMU""
        id: qemu
        uses: docker/setup-qemu-action@v1
      # step 3
      - name: ""Build arm-binary""
        run: |
          docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            arm64v8/ubuntu:20.04 \
            bash -exc 'apt-get update -y && \
                       apt-get install maven -y && \
                       mvn -version && \
                       mvn -Prelease-seata -DskipTests clean install -U'",,
16,https://github.com/spring-projects/spring-boot,https://github.com/spring-projects/spring-boot/blob/main/.github/workflows/build-pull-request.yml,"name: Build Pull Request
on: pull_request

permissions:
  contents: read

jobs:
  build:
    name: Build pull request
    runs-on: ubuntu22-8-32
    if: ${{ github.repository == 'spring-projects/spring-boot' }}
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'liberica'

      - name: Check out code
        uses: actions/checkout@v4

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up Gradle
        uses: gradle/gradle-build-action@842c587ad8aa4c68eeba24c396e15af4c2e9f30a

      - name: Build
        env:
          CI: 'true'
          GRADLE_ENTERPRISE_URL: 'https://ge.spring.io'
        run: ./gradlew -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false --no-daemon --no-parallel --continue build

      - name: Print JVM thread dumps when cancelled
        uses: ./.github/actions/print-jvm-thread-dumps
        if: cancelled()",,
17,https://github.com/TheAlgorithms/Java,https://github.com/TheAlgorithms/Java/blob/master/.github/workflows/build.yml,"name: Build
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify",,
18,https://github.com/spring-projects/spring-petclinic,https://github.com/spring-projects/spring-petclinic/blob/main/.github/workflows/maven-build.yml,"name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java}}
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven Wrapper
        run: ./mvnw -B package",,
19,https://github.com/square/javapoet,https://github.com/square/javapoet/blob/master/.github/workflows/build.yml,"name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 8

      - run: mvn --no-transfer-progress verify source:jar javadoc:jar

      - run: mvn --no-transfer-progress deploy --settings="".github/workflows/settings.xml"" -Dmaven.test.skip=true
        if: ${{ github.ref == 'refs/heads/master' && github.repository == 'square/javapoet' }}",,
20,https://github.com/seata/seata,https://github.com/seata/seata/blob/2.x/.github/workflows/build.yml,"name: ""build""

on:
  push:
    branches: [ 2.x, develop, master ]
  pull_request:
    branches: [ 2.x, develop, master ]

jobs:
  # job 1: Test based on java 8 and 17. Do not checkstyle.
  build:
    name: ""build""
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [ 8, 17 ]
    steps:
      # step 1
      - name: ""Checkout""
        uses: actions/checkout@v3
      # step 2
      - name: ""Set up Java JDK""
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
      # step 3
      - name: ""Print maven version""
        run: ./mvnw -version
      # step 4
      - name: ""Build with Maven""
        run: |
          if [ ""${{ matrix.java }}"" == ""8"" ]; then
            ./mvnw -T 4C clean test -Dcheckstyle.skip=false -Dlicense.skip=false -e -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn;
          elif [ ""${{ matrix.java }}"" == ""17"" ]; then
            ./mvnw -T 4C clean test -Dcheckstyle.skip=true  -Dlicense.skip=true  -e -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn;
          fi
      # step 5
      - name: ""Codecov""
        if: matrix.java == '8'
        uses: codecov/codecov-action@v3.1.4

  # job 2: Test on 'arm64v8/ubuntu' OS.
  build_arm64-binary:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && (github.ref_name == 'develop' || github.ref_name == 'snapshot' || github.ref_name == '2.x') }}
    strategy:
      fail-fast: false
    steps:
      # step 1
      - name: ""Checkout""
        uses: actions/checkout@v3
      # step 2
      - name: ""Set up QEMU""
        id: qemu
        uses: docker/setup-qemu-action@v1
      # step 3
      - name: ""Build arm-binary""
        run: |
          docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            arm64v8/ubuntu:20.04 \
            bash -exc 'apt-get update -y && \
                       apt-get install maven -y && \
                       mvn -version && \
                       mvn -Prelease-seata -DskipTests clean install -U'",,
21,https://github.com/pxb1988/dex2jar,https://github.com/pxb1988/dex2jar/blob/2.x/.github/workflows/gradle.yml,"name: Java CI with Gradle

on:
  push:
    branches: [ 2.x ]
    tags:
      - v*
  pull_request:
    branches: [ 2.x ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: 'gradle'
    - name: Build dex-tools with Gradle
      run: |
         ./gradlew ""-DGITHUB_REF_NAME=${GITHUB_REF_NAME}"" check distZip

    - name: Archive dex tools
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: dex-tools
        path: dex-tools/build/distributions/dex-tools-*.zip",,
22,https://github.com/pinpoint-apm/pinpoint,https://github.com/pinpoint-apm/pinpoint/blob/master/.github/workflows/maven.yml,"# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Git checkout
      uses: actions/checkout@v3
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-
    - name: Cache node install
      uses: actions/cache@v3
      with:
        path: 'node_install'
        key: ${{ runner.os }}-node_install-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-node_install-
    - name: Set JAVA_HOME
      run: |
        echo ""JAVA_8_HOME=$JAVA_HOME_8_X64"" >> $GITHUB_ENV
        echo ""JAVA_11_HOME=$JAVA_HOME_11_X64"" >> $GITHUB_ENV
        echo ""JAVA_HOME=$JAVA_HOME_8_X64"" >> $GITHUB_ENV
    - name: Java Environment
      run: env | grep '^JAVA'
    - name: Build with Maven
      run: ./mvnw --batch-mode -Pcode.coverage package --file pom.xml
    - name: Code coverage report
      run: ./mvnw --batch-mode -Pcode.coverage jacoco:report --file pom.xml
    - name: Code coverage
      uses: codecov/codecov-action@v3
      with:
        name: codecov",,
23,https://github.com/PowerJob/PowerJob,https://github.com/PowerJob/PowerJob/blob/master/.github/workflows/maven.yml,"name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B clean package -Pdev -DskipTests --file pom.xml",,
24,https://github.com/Nepxion/Discovery,https://github.com/Nepxion/Discovery/blob/6.x.x/.github/workflows/maven.yml,"# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: build

on:
  push:
    branches: [ 6.x.x ]
  pull_request:
    branches: [ 6.x.x ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
    - name: Build with Maven
      run: mvn -B package --file pom.xml",,
25,https://github.com/microg/GmsCore,https://github.com/microg/GmsCore/blob/master/.github/workflows/build.yml,"name: Build
on: [pull_request, push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - run: ./gradlew --no-daemon build
        env:
          TERM: dumb
          JAVA_OPTS: -Xmx2048m",,
26,https://github.com/micronaut-projects/micronaut-core,https://github.com/micronaut-projects/micronaut-core/blob/4.2.x/.github/workflows/gradle.yml,"name: Java CI
on:
  push:
    branches:
      - master
      - '[1-9]+.[0-9]+.x'
  pull_request:
    branches:
      - master
      - '[1-9]+.[0-9]+.x'
jobs:
  build:
    if: github.repository != 'micronaut-projects/micronaut-project-template'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['17']
    env:
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USERNAME }}
      GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
      GH_TOKEN_PUBLIC_REPOS_READONLY: ${{ secrets.GH_TOKEN_PUBLIC_REPOS_READONLY }}
      GH_USERNAME: ${{ secrets.GH_USERNAME }}
      TESTCONTAINERS_RYUK_DISABLED: true
      PREDICTIVE_TEST_SELECTION: ""${{ github.event_name == 'pull_request' && 'true' || 'false' }}""
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
       # https://github.com/actions/virtual-environments/issues/709
      - name: ""🗑 Free disk space""
        run: |
         sudo rm -rf ""/usr/local/share/boost""
         sudo rm -rf ""$AGENT_TOOLSDIRECTORY""
         sudo apt-get clean
         df -h

      - name: ""📥 Checkout repository""
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ""🔧 Setup GraalVM CE""
        uses: graalvm/setup-graalvm@v1.1.4
        with:
          distribution: 'graalvm'
          java-version: ${{ matrix.java }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: ""🔧 Setup Gradle""
        uses: gradle/gradle-build-action@v2

      - name: ""❓ Optional setup step""
        run: |
          [ -f ./setup.sh ] && ./setup.sh || [ ! -f ./setup.sh ]

      - name: ""🛠 Build with Gradle""
        id: gradle
        run: |
          ./gradlew check --no-daemon --continue

      - name: ""🔎 Run static analysis""
        if: env.SONAR_TOKEN != ''
        run: |
          ./gradlew sonar

      - name: ""📊 Publish Test Report""
        if: always()
        uses: mikepenz/action-junit-report@v4
        with:
          check_name: Java CI / Test Report (${{ matrix.java }})
          report_paths: '**/build/test-results/test/TEST-*.xml'
          check_retries: 'true'",,
27,https://github.com/mockito/mockito,https://github.com/mockito/mockito/blob/main/.github/workflows/ci.yml,"name: CI

on:
  push:
    branches: ['main']
    tags: [v*]
  pull_request:
    branches: ['**']

permissions:
  contents: read

jobs:

  #
  # Main build job
  #
  build:
    runs-on: ubuntu-latest
    if: ""! contains(toJSON(github.event.commits.*.message), '[skip ci]')""

    # Definition of the build matrix
    strategy:
      matrix:
        java: [11, 17]
        entry:
          - { mock-maker: 'mock-maker-default', member-accessor: 'member-accessor-default' }
          - { mock-maker: 'mock-maker-inline', member-accessor: 'member-accessor-module' }
          - { mock-maker: 'mock-maker-subclass', member-accessor: 'member-accessor-module' }
          - { mock-maker: 'mock-maker-subclass', member-accessor: 'member-accessor-reflection' }
          - { mock-maker: 'mock-maker-inline', member-accessor: 'member-accessor-reflection' }

    # All build steps
    # SINGLE-MATRIX-JOB means that the step does not need to be executed on every job in the matrix
    steps:

    - name: 1. Check out code
      uses: actions/checkout@v4 # https://github.com/actions/checkout
      with:
        fetch-depth: '0' # https://github.com/shipkit/shipkit-changelog#fetch-depth-on-ci

    - name: 2. Set up Java for running Gradle build
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 17

    - name: 3. Validate Gradle wrapper
      if: matrix.java == 11 && matrix.entry.mock-maker == 'mock-maker-default' # SINGLE-MATRIX-JOB
      uses: gradle/wrapper-validation-action@v1.1.0 # https://github.com/gradle/wrapper-validation-action

    - name: 4. Build and check reproducibility of artifacts (single job only)
      if: matrix.java == 11 && matrix.entry.mock-maker == 'mock-maker-default' # SINGLE-MATRIX-JOB
      run: ./check_reproducibility.sh

    - name: 5. Spotless check (single job only). Run './gradlew spotlessApply' locally if this job fails.
      if: matrix.java == 11 && matrix.entry.mock-maker == 'mock-maker-default' # SINGLE-MATRIX-JOB
      run: >
        ./gradlew
        spotlessCheck
        --stacktrace
        --scan

    - name: 6. Build on Java ${{ matrix.java }} with ${{ matrix.entry.mock-maker }} and ${{ matrix.entry.member-accessor }}
      run: >
        ./gradlew
        -Pmockito.test.java=${{ matrix.java }}
        build
        idea
        --stacktrace
        --scan
      env:
        MOCK_MAKER: ${{ matrix.entry.mock-maker }}
        MEMBER_ACCESSOR: ${{ matrix.entry.member-accessor }}

    - name: 7. Generate coverage report
      run: >
        ./gradlew
        -Pmockito.test.java=${{ matrix.java }}
        coverageReport
        --stacktrace
        --scan

    - name: 8. Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        files: build/reports/jacoco/mockitoCoverage/mockitoCoverage.xml
        fail_ci_if_error: true",,
28,https://github.com/mybatis/generator,https://github.com/mybatis/generator/blob/master/.github/workflows/ci.yaml,"name: Java CI

defaults:
  run:
    working-directory: core

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        java: [11, 17, 21]
        distribution: ['zulu']
      fail-fast: false
      max-parallel: 4
    name: Test JDK ${{ matrix.java }}, ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: ${{ matrix.distribution }}
      - name: Test with Maven
        run: ./mvnw test -B -D""license.skip=true""",,
29,https://github.com/lzyzsd/JsBridge,https://github.com/lzyzsd/JsBridge/blob/master/.github/workflows/android.yml,"name: Android CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Gradle
      run: ./gradlew build",,
30,https://github.com/libgdx/libgdx,https://github.com/libgdx/libgdx/blob/master/.github/workflows/build-pullrequest.yml,"name: Build pull request

on:
  pull_request:
    branches: [ master ]
permissions: 
  contents: read

jobs:
  build-java:
    if: ""!contains(github.event.head_commit.message, 'ci skip')""
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build & test Java code
        run: |
          ./gradlew fetchNatives build",,
31,https://github.com/json-path/JsonPath,https://github.com/json-path/JsonPath/blob/master/.github/workflows/ci.yml,"name: Java CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [8, 11, 17, 18]
      fail-fast: false
      max-parallel: 4
    name: JDK ${{ matrix.java }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build --warning-mode all

      - name: Run Tests
        run: ./gradlew check

      - name: Maven Install
        run: ./gradlew clean publishToMavenLocal",,
32,https://github.com/jhy/jsoup,https://github.com/jhy/jsoup/blob/master/.github/workflows/build.yml,"name: Build
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        # choosing to run a reduced set of LTS, current, and next, to balance coverage and execution time
        java: [8, 17, 20]
      fail-fast: false
    name: Test JDK ${{ matrix.java }}, ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Maven Compile
        run: mvn -X compile -B --file pom.xml

      - name: Maven Verify
        run: mvn -X verify -B --file pom.xml",,
33,https://github.com/karatelabs/karate,https://github.com/karatelabs/karate/blob/master/.github/workflows/maven-build.yml,"name: maven-build

on:
  push:
    branches: [ master, develop, java11 ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
    - name: git checkout
      uses: actions/checkout@v4    
    - name: set up jdk 11
      uses: actions/setup-java@v3
      with:
        distribution: adopt
        java-version: 11
    - name: cache maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - name: build with maven
      run: mvn -B clean install -P pre-release -Djavacpp.platform=linux-x86_64",,